{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;AACA,wFAAiD;AA4C7C,mBA5CG,iCAAQ,CA4CH;AA1CZ,qEAAqE;AAErE,MAAM,uBAAuB,GAAG,OAAO,CAAC,gEAAgE,CAAC,CAAC;AAC1G,MAAM,iCAAiC,GAAG,OAAO,CAAC,yDAAyD,CAAC,CAAC,iCAAiC,CAAC;AAE/I;;;;;;;;EAQE;AACF,MAAM,iBAAiB,GAAG,uBAAuB,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,EAAE,CAAC,CAAC;IAC9E,eAAe,EAAC,cAAc;IAC9B,gBAAgB,EAAC;QACb,uBAAuB,EAAC;YACpB,gBAAgB,EAAC,wBAAwB;SAAC;KAAC;IACnD,eAAe,EAAC,MAAM,CAAC,MAAM,CAAC,EAAC,KAAK,EAAC,IAAI,EAAC,EACtC,iCAAiC,CAAC,EAAC,sBAAsB,EAAC,IAAI,EAAC,CAAC,CAAC;CAAC,CAAC,CAAC,CAAC;AAuBzE,8CAAiB;AApBrB,MAAM,UAAU,GAAG,uBAAuB,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,CAAC;IAChE,eAAe,EAAC,eAAe;IAC/B,gBAAgB,EAAC,EAAE;IACnB,eAAe,EAAC,EAAC,KAAK,EAAC,IAAI,EAAE,OAAO,EAAC,IAAI,EAAC;CACzC,CAAC,CAAC,CAAC;AAiBJ,gCAAU;AAfd,MAAM,MAAM,GAAG,uBAAuB,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;IACxD,eAAe,EAAC,WAAW;IAC3B,gBAAgB,EAAC,EAAE;IACnB,eAAe,EAAC,EAAC,KAAK,EAAC,IAAI,EAAE,OAAO,EAAC,IAAI,EAAE,IAAI,EAAC,IAAI,EAAE,KAAK,EAAC,IAAI,EAAC;CAChE,CAAC,CAAC,CAAC;AAYJ,wBAAM","sourcesContent":["\nimport XamlHost from './XamlHostNativeComponent';\n\n//import CalendarView from './FabricXamlCalendarViewNativeComponent';\n\nconst nativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');\nconst ConditionallyIgnoredEventHandlers = require('react-native/Libraries/NativeComponent/ViewConfigIgnore').ConditionallyIgnoredEventHandlers;\n\n/*\nconst __INTERNAL_VIEW_CONFIG = {\n    uiViewClassName:'CalendarView',\n    directEventTypes:{\n        topSelectedDatesChanged:{\n            registrationName:'onSelectedDatesChanged'}},\n    validAttributes:Object.assign({label:true},\n        ConditionallyIgnoredEventHandlers({onSelectedDatesChanged:true}))};\n*/\nconst FabricXamlControl = nativeComponentRegistry.get('FabricXamlControl', () => ({\n    uiViewClassName:'CalendarView',\n    directEventTypes:{\n        topSelectedDatesChanged:{\n            registrationName:'onSelectedDatesChanged'}},\n    validAttributes:Object.assign({label:true},\n        ConditionallyIgnoredEventHandlers({onSelectedDatesChanged:true}))}));\n\n\nconst StackPanel = nativeComponentRegistry.get('StackPanel', () => ({\n    uiViewClassName:'FX_StackPanel',\n    directEventTypes:{},\n    validAttributes:{label:true, content:true},\n    }));\n\nconst Button = nativeComponentRegistry.get('Button', () => ({\n    uiViewClassName:'FX_Button',\n    directEventTypes:{},\n    validAttributes:{label:true, content:true, text:true, davis:true},\n    }));\n\n\n//import FabricXamlControl from './FabricXamlControl';\n\n\n\n\nexport {\n    XamlHost,\n    FabricXamlControl,\n    StackPanel,\n    Button,\n};\n"]}